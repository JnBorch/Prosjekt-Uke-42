const int button1 = 2; 
const int button2 = 3; 
const int led1 = 9;    
const int led2 = 8;    
const int buzzerpin = 10;  

int player1Score = 0;         
int player2Score = 0; 

enum game_states{reset, countdown, buzzeron}; 
	game_states states = reset;      

void setup() {
  Serial.begin(9600);
  pinMode(button1, INPUT); 
  pinMode(button2, INPUT); 
  pinMode(led1, OUTPUT);  
  pinMode(led2, OUTPUT);  
  pinMode(buzzerpin, OUTPUT); 

	attachInterrupt(digitalPinToInterrupt(button1), player1, RISING);
	attachInterrupt(digitalPinToInterrupt(button2), player2, RISING);
}

void loop(){
	switch(states){
		case(reset):
			noTone(buzzerpin);
			delay(1000);
			states = countdown;
		break;
		case(countdown):
			delay(random(1000, 3000));
			states = buzzeron;
		break;
		case(buzzeron):
			tone(buzzerpin, 500);
		break;
	}
}

void player1(){
	if(states == reset){
	}
	if(states == countdown && player1Score > 0){
		--player1Score;
		Serial.println("Player1 has been penalized");
		states = reset;
	}
	if(states == buzzeron){
		states = reset;
		++player1Score;
		digitalWrite(led1, HIGH);
		delay(500);
		digitalWrite(led1, LOW);
		Serial.println("Player 1: " + String(player1Score) + " | Player 2: " + String(player2Score));    
	}
}

void player2(){
	if(states == reset){
	}
	if(states == countdown && player2Score > 0){
		--player2Score;
		Serial.println("Player2 has been penalized");
		states = reset;
	}
	if(states == buzzeron){
		states = reset;
		++player2Score;
		digitalWrite(led2, HIGH);
		delay(500);
		digitalWrite(led2, LOW);
		Serial.println("Player 1: " + String(player1Score) + " | Player 2: " + String(player2Score));
	}
}

void Seven_LED(){
	
}